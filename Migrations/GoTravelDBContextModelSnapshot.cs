// <auto-generated />
using System;
using GoTravelTour.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoTravelTour.Migrations
{
    [DbContext(typeof(GoTravelDBContext))]
    partial class GoTravelDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoTravelTour.Models.AlmacenImagenes", b =>
                {
                    b.Property<int>("AlmacenImagenesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageContent");

                    b.Property<string>("Localizacion");

                    b.Property<string>("NombreImagen");

                    b.Property<int>("ProductoId");

                    b.Property<string>("TipoImagen");

                    b.HasKey("AlmacenImagenesId");

                    b.HasIndex("ProductoId");

                    b.ToTable("AlmacenImagenes");
                });

            modelBuilder.Entity("GoTravelTour.Models.AlojamientosPlanesAlimenticios", b =>
                {
                    b.Property<int>("AlojamientosPlanesAlimenticiosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlanesAlimenticiosId");

                    b.Property<int>("ProductoId");

                    b.HasKey("AlojamientosPlanesAlimenticiosId");

                    b.HasIndex("PlanesAlimenticiosId");

                    b.HasIndex("ProductoId");

                    b.ToTable("AlojamientosPlanesAlimenticios");
                });

            modelBuilder.Entity("GoTravelTour.Models.CategoriaAuto", b =>
                {
                    b.Property<int>("CategoriaAutoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("CategoriaAutoId");

                    b.ToTable("CategoriaAuto");
                });

            modelBuilder.Entity("GoTravelTour.Models.CategoriaComodidad", b =>
                {
                    b.Property<int>("CategoriaComodidadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("CategoriaComodidadId");

                    b.ToTable("CategoriaComodidades");
                });

            modelBuilder.Entity("GoTravelTour.Models.CategoriaHabitacion", b =>
                {
                    b.Property<int>("CategoriaHabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("CategoriaHabitacionId");

                    b.ToTable("CategoriaHabitacion");
                });

            modelBuilder.Entity("GoTravelTour.Models.CategoriaHoteles", b =>
                {
                    b.Property<int>("CategoriaHotelesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("CategoriaHotelesId");

                    b.ToTable("CategoriaHoteles");
                });

            modelBuilder.Entity("GoTravelTour.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle");

                    b.Property<string>("Ciudad");

                    b.Property<string>("Correo");

                    b.Property<double?>("Descuento");

                    b.Property<string>("Direccion");

                    b.Property<string>("Estado");

                    b.Property<string>("ImageContent");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<bool>("IsActivo");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Localizador");

                    b.Property<string>("Nombre");

                    b.Property<string>("Pais");

                    b.Property<string>("Telefono");

                    b.Property<string>("TipoTrasaccion");

                    b.Property<string>("ZipCode");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GoTravelTour.Models.CombinacionHuespedes", b =>
                {
                    b.Property<int>("CombinacionHuespedesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantAdult");

                    b.Property<int>("CantInfantes");

                    b.Property<int>("CantNino");

                    b.Property<int?>("HabitacionId");

                    b.Property<bool>("IsActivo");

                    b.Property<int>("ProductoId");

                    b.HasKey("CombinacionHuespedesId");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CombinacionHuespedes");
                });

            modelBuilder.Entity("GoTravelTour.Models.Comodidades", b =>
                {
                    b.Property<int>("ComodidadesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaComodidadId");

                    b.Property<string>("Nombre");

                    b.HasKey("ComodidadesId");

                    b.HasIndex("CategoriaComodidadId");

                    b.ToTable("Comodidades");
                });

            modelBuilder.Entity("GoTravelTour.Models.ComodidadesProductos", b =>
                {
                    b.Property<int>("ComodidadesProductosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComodidadesId");

                    b.Property<int>("ProductoId");

                    b.HasKey("ComodidadesProductosId");

                    b.HasIndex("ComodidadesId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ComodidadesProductos");
                });

            modelBuilder.Entity("GoTravelTour.Models.ConfiguracionVoucher", b =>
                {
                    b.Property<int>("ConfiguracionVoucherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condiciones");

                    b.Property<string>("Correo");

                    b.Property<string>("ImageContent");

                    b.Property<string>("InfoAgente");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("TelefonoAsistencia");

                    b.Property<string>("TipoImagen");

                    b.Property<int>("TipoProductoId");

                    b.HasKey("ConfiguracionVoucherId");

                    b.HasIndex("TipoProductoId");

                    b.ToTable("ConfiguracionVoucher");
                });

            modelBuilder.Entity("GoTravelTour.Models.Contrato", b =>
                {
                    b.Property<int>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoOfertaEspecial");

                    b.Property<int>("DistribuidorId");

                    b.Property<DateTime?>("FechaFinBooking");

                    b.Property<DateTime?>("FechaFinTravel");

                    b.Property<DateTime?>("FechaInicioBooking");

                    b.Property<DateTime?>("FechaInicioTravel");

                    b.Property<int>("FormaCobro");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Nombre");

                    b.Property<bool>("OfertaEspecial");

                    b.Property<bool>("PermiteHacerCopia");

                    b.Property<int>("TipoProductoId");

                    b.HasKey("ContratoId");

                    b.HasIndex("DistribuidorId");

                    b.HasIndex("TipoProductoId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("GoTravelTour.Models.Distribuidor", b =>
                {
                    b.Property<int>("DistribuidorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("DistribuidorId");

                    b.ToTable("Distribuidores");
                });

            modelBuilder.Entity("GoTravelTour.Models.Habitacion", b =>
                {
                    b.Property<int>("HabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaHabitacionId");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("IsActiva");

                    b.Property<bool>("IsPayPerRoom");

                    b.Property<string>("Nombre");

                    b.Property<int?>("NombreHabitacionId");

                    b.Property<bool>("PermiteHacerCopia");

                    b.Property<int>("ProductoId");

                    b.Property<string>("SKU");

                    b.HasKey("HabitacionId");

                    b.HasIndex("CategoriaHabitacionId");

                    b.HasIndex("NombreHabitacionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("GoTravelTour.Models.HabitacionServiciosHabitacion", b =>
                {
                    b.Property<int>("HabitacionServiciosHabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HabitacionId");

                    b.Property<int>("ServiciosHabitacionId");

                    b.HasKey("HabitacionServiciosHabitacionId");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("ServiciosHabitacionId");

                    b.ToTable("HabitacionServiciosHabitacion");
                });

            modelBuilder.Entity("GoTravelTour.Models.HabitacionTipoHabitacion", b =>
                {
                    b.Property<int>("HabitacionTipoHabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HabitacionId");

                    b.Property<int>("TipoHabitacionId");

                    b.HasKey("HabitacionTipoHabitacionId");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("HabitacionTipoHabitacion");
                });

            modelBuilder.Entity("GoTravelTour.Models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("GoTravelTour.Models.Modelo", b =>
                {
                    b.Property<int>("ModeloId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("ModeloId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("GoTravelTour.Models.Modificador", b =>
                {
                    b.Property<int>("ModificadorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantAdult");

                    b.Property<int>("CantInfantes");

                    b.Property<int>("CantNino");

                    b.Property<int?>("ContratoId");

                    b.Property<DateTime?>("FechaF");

                    b.Property<DateTime?>("FechaI");

                    b.Property<string>("IdentificadorModificador");

                    b.Property<bool>("IsActivo");

                    b.Property<bool>("PermiteHacerCopia");

                    b.Property<int?>("ProveedorId");

                    b.Property<string>("TipoModificadorPrecio");

                    b.HasKey("ModificadorId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Modificadores");
                });

            modelBuilder.Entity("GoTravelTour.Models.ModificadorProductos", b =>
                {
                    b.Property<int>("ModificadorProductosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModificadorId");

                    b.Property<int>("ProductoId");

                    b.HasKey("ModificadorProductosId");

                    b.HasIndex("ModificadorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ModificadorProductos");
                });

            modelBuilder.Entity("GoTravelTour.Models.ModificadorTemporada", b =>
                {
                    b.Property<int>("ModificadorTemporadaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModificadorId");

                    b.Property<int>("TemporadaId");

                    b.HasKey("ModificadorTemporadaId");

                    b.HasIndex("ModificadorId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("ModificadorTemporada");
                });

            modelBuilder.Entity("GoTravelTour.Models.NombreHabitacion", b =>
                {
                    b.Property<int>("NombreHabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("NombreHabitacionId");

                    b.ToTable("NombreHabitacion");
                });

            modelBuilder.Entity("GoTravelTour.Models.NombreTemporada", b =>
                {
                    b.Property<int>("NombreTemporadaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("NombreTemporadaId");

                    b.ToTable("NombreTemporadas");
                });

            modelBuilder.Entity("GoTravelTour.Models.Orden", b =>
                {
                    b.Property<int>("OrdenId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<int?>("CreadorUsuarioId");

                    b.Property<int>("Duracion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaActualizacion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<bool>("HasVoucher");

                    b.Property<string>("IntercomConferceNumber");

                    b.Property<string>("Nombre");

                    b.Property<string>("Notas");

                    b.Property<string>("NumeroOrden");

                    b.Property<bool>("OFACrequired");

                    b.Property<int?>("SobreprecioId");

                    b.HasKey("OrdenId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CreadorUsuarioId");

                    b.HasIndex("SobreprecioId");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("GoTravelTour.Models.OrdenProducto", b =>
                {
                    b.Property<int>("OrdenProductoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrdenId");

                    b.Property<int>("ProductoId");

                    b.HasKey("OrdenProductoId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("ProductoId");

                    b.ToTable("OrdenProducto");
                });

            modelBuilder.Entity("GoTravelTour.Models.Paquete", b =>
                {
                    b.Property<int>("PaqueteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("ImageContent1");

                    b.Property<string>("ImageContent2");

                    b.Property<string>("ImageContentP");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Nombre");

                    b.Property<string>("TipoImagen1");

                    b.Property<string>("TipoImagen2");

                    b.Property<string>("TipoImagenP");

                    b.HasKey("PaqueteId");

                    b.ToTable("Paquete");
                });

            modelBuilder.Entity("GoTravelTour.Models.PlanesAlimenticios", b =>
                {
                    b.Property<int>("PlanesAlimenticiosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Nombre");

                    b.HasKey("PlanesAlimenticiosId");

                    b.ToTable("PlanesAlimenticios");
                });

            modelBuilder.Entity("GoTravelTour.Models.PosibleCombinacion", b =>
                {
                    b.Property<int>("PosibleCombinacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantAdult");

                    b.Property<int>("CantInfantes");

                    b.Property<int>("CantNino");

                    b.Property<string>("Nombre");

                    b.Property<int>("TipoHabitacionId");

                    b.HasKey("PosibleCombinacionId");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("PosibleCombinaciones");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioActividad", b =>
                {
                    b.Property<int>("PrecioActividadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PrecioAdulto");

                    b.Property<decimal>("PrecioInfante");

                    b.Property<decimal>("PrecioNino");

                    b.Property<int>("ProductoId");

                    b.Property<int?>("TemporadaId");

                    b.HasKey("PrecioActividadId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("PrecioActividad");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioAlojamiento", b =>
                {
                    b.Property<int>("PrecioAlojamientoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContratoId");

                    b.Property<int?>("HabitacionId");

                    b.Property<decimal>("Precio");

                    b.Property<int>("ProductoId");

                    b.Property<int?>("TemporadaId");

                    b.Property<int?>("TipoHabitacionId");

                    b.HasKey("PrecioAlojamientoId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TemporadaId");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("PrecioAlojamiento");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioComodidades", b =>
                {
                    b.Property<int>("PrecioComodidadesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComodidadesId");

                    b.Property<decimal>("Precio");

                    b.Property<int>("ProductoId");

                    b.HasKey("PrecioComodidadesId");

                    b.HasIndex("ComodidadesId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PrecioComodidades");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioPlanesAlimenticios", b =>
                {
                    b.Property<int>("PrecioPlanesAlimenticiosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContratoDelPrecioContratoId");

                    b.Property<int>("PlanesAlimenticiosId");

                    b.Property<decimal>("Precio");

                    b.Property<int>("ProductoId");

                    b.HasKey("PrecioPlanesAlimenticiosId");

                    b.HasIndex("ContratoDelPrecioContratoId");

                    b.HasIndex("PlanesAlimenticiosId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PrecioPlanesAlimenticios");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioRentaAutos", b =>
                {
                    b.Property<int>("PrecioRentaAutosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Deposito");

                    b.Property<int>("DiasExtra");

                    b.Property<int>("ProductoId");

                    b.Property<decimal>("Seguro");

                    b.Property<int?>("TemporadaId");

                    b.HasKey("PrecioRentaAutosId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("PrecioRentaAutos");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioServicio", b =>
                {
                    b.Property<int>("PrecioServicioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HorasAdicionales");

                    b.Property<decimal?>("Incluido");

                    b.Property<decimal?>("PrecioAdulto");

                    b.Property<decimal?>("PrecioInfante");

                    b.Property<decimal?>("PrecioNino");

                    b.Property<int>("ServicioId");

                    b.Property<int?>("TemporadaId");

                    b.HasKey("PrecioServicioId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("PrecioServicio");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioTraslado", b =>
                {
                    b.Property<int>("PrecioTrasladoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Precio");

                    b.Property<int>("ProductoId");

                    b.Property<int>("RutasId");

                    b.Property<int?>("TemporadaId");

                    b.HasKey("PrecioTrasladoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("RutasId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("PrecioTraslados");
                });

            modelBuilder.Entity("GoTravelTour.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("DescripcionCorta");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Location");

                    b.Property<string>("Nombre");

                    b.Property<string>("Notas");

                    b.Property<bool>("PermiteHacerCopia");

                    b.Property<int>("ProveedorId");

                    b.Property<int?>("PuntoInteresId");

                    b.Property<string>("SKU");

                    b.Property<string>("Schedule");

                    b.Property<string>("Telefono");

                    b.Property<string>("TelefonoAsistencia");

                    b.Property<int>("TipoProductoId");

                    b.HasKey("ProductoId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("PuntoInteresId");

                    b.HasIndex("TipoProductoId");

                    b.ToTable("Productos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Producto");
                });

            modelBuilder.Entity("GoTravelTour.Models.ProductoDistribuidor", b =>
                {
                    b.Property<int>("ProductoDistribuidorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistribuidorId");

                    b.Property<int>("ProductoId");

                    b.HasKey("ProductoDistribuidorId");

                    b.HasIndex("DistribuidorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoDistribuidores");
                });

            modelBuilder.Entity("GoTravelTour.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("GoTravelTour.Models.PuntoInteres", b =>
                {
                    b.Property<int>("PuntoInteresId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int>("RegionId");

                    b.HasKey("PuntoInteresId");

                    b.HasIndex("RegionId");

                    b.ToTable("PuntosInteres");
                });

            modelBuilder.Entity("GoTravelTour.Models.RangoFechas", b =>
                {
                    b.Property<int>("RangoFechasId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<int?>("ProductoId");

                    b.Property<int>("TemporadaId");

                    b.HasKey("RangoFechasId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("RangoFechas");
                });

            modelBuilder.Entity("GoTravelTour.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("RegionId");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("GoTravelTour.Models.Reglas", b =>
                {
                    b.Property<int>("ReglasId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActivo");

                    b.Property<int>("ModificadorId");

                    b.Property<double>("PrecioFijo");

                    b.Property<double>("PrecioPorCiento");

                    b.Property<int>("TipoHabitacionId");

                    b.Property<string>("TipoPersona");

                    b.Property<string>("TipoPrecioHabitacion");

                    b.HasKey("ReglasId");

                    b.HasIndex("ModificadorId");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("Reglas");
                });

            modelBuilder.Entity("GoTravelTour.Models.Restricciones", b =>
                {
                    b.Property<int>("RestriccionesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActivo");

                    b.Property<int>("Maximo");

                    b.Property<int>("Minimo");

                    b.Property<int?>("TemporadaId");

                    b.HasKey("RestriccionesId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("Restricciones");
                });

            modelBuilder.Entity("GoTravelTour.Models.RestriccionesPrecio", b =>
                {
                    b.Property<int>("RestriccionesPrecioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Precio");

                    b.Property<int>("ProductoId");

                    b.Property<int>("RestriccionesId");

                    b.Property<int?>("ServicioId");

                    b.HasKey("RestriccionesPrecioId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("RestriccionesId");

                    b.ToTable("RestriccionesPrecios");
                });

            modelBuilder.Entity("GoTravelTour.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreRol");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GoTravelTour.Models.Rutas", b =>
                {
                    b.Property<int>("RutasId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Distancia");

                    b.Property<int?>("PuntoInteresDestinoPuntoInteresId");

                    b.Property<int?>("PuntoInteresOrigenPuntoInteresId");

                    b.HasKey("RutasId");

                    b.HasIndex("PuntoInteresDestinoPuntoInteresId");

                    b.HasIndex("PuntoInteresOrigenPuntoInteresId");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("GoTravelTour.Models.Servicio", b =>
                {
                    b.Property<int>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria");

                    b.Property<string>("Nombre");

                    b.Property<bool>("Opcional");

                    b.Property<int>("ProductoId");

                    b.HasKey("ServicioId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("GoTravelTour.Models.ServiciosHabitacion", b =>
                {
                    b.Property<int>("ServiciosHabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("ServiciosHabitacionId");

                    b.ToTable("ServiciosHabitacion");
                });

            modelBuilder.Entity("GoTravelTour.Models.Sobreprecio", b =>
                {
                    b.Property<int>("SobreprecioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("PagoPorDia");

                    b.Property<decimal>("PrecioDesde");

                    b.Property<decimal>("PrecioHasta");

                    b.Property<int>("TipoProductoId");

                    b.Property<decimal>("ValorDinero");

                    b.Property<decimal>("ValorPorCiento");

                    b.HasKey("SobreprecioId");

                    b.HasIndex("TipoProductoId");

                    b.ToTable("Sobreprecio");
                });

            modelBuilder.Entity("GoTravelTour.Models.Temporada", b =>
                {
                    b.Property<int>("TemporadaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoId");

                    b.Property<string>("DiasSemana");

                    b.Property<string>("Nombre");

                    b.Property<bool>("PermiteHacerCopia");

                    b.HasKey("TemporadaId");

                    b.HasIndex("ContratoId");

                    b.ToTable("Temporadas");
                });

            modelBuilder.Entity("GoTravelTour.Models.TipoAlojamiento", b =>
                {
                    b.Property<int>("TipoAlojamientoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("TipoAlojamientoId");

                    b.ToTable("TipoAlojamientos");
                });

            modelBuilder.Entity("GoTravelTour.Models.TipoHabitacion", b =>
                {
                    b.Property<int>("TipoHabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("TipoHabitacionId");

                    b.ToTable("TipoHabitaciones");
                });

            modelBuilder.Entity("GoTravelTour.Models.TipoProducto", b =>
                {
                    b.Property<int>("TipoProductoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("TipoProductoId");

                    b.ToTable("TipoProductos");
                });

            modelBuilder.Entity("GoTravelTour.Models.TipoServicio", b =>
                {
                    b.Property<int>("TipoServicioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("TipoServicioId");

                    b.ToTable("TipoServicio");
                });

            modelBuilder.Entity("GoTravelTour.Models.TipoTransporte", b =>
                {
                    b.Property<int>("TipoTransporteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("TipoTransporteId");

                    b.ToTable("TipoTransportes");
                });

            modelBuilder.Entity("GoTravelTour.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<string>("Correo");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("RolId");

                    b.Property<string>("Telefono");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("UsuarioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GoTravelTour.Models.VehiculoCategoriaAuto", b =>
                {
                    b.Property<int>("VehiculoCategoriaAutoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaAutoId");

                    b.Property<int>("ProductoId");

                    b.HasKey("VehiculoCategoriaAutoId");

                    b.HasIndex("CategoriaAutoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("VehiculoCategoriaAuto");
                });

            modelBuilder.Entity("GoTravelTour.Models.Actividad", b =>
                {
                    b.HasBaseType("GoTravelTour.Models.Producto");

                    b.Property<int>("ActividadId");

                    b.Property<int>("CantidadPersonas");

                    b.Property<int>("Duracion");

                    b.Property<bool>("HasTransporte");

                    b.Property<string>("Latitud");

                    b.Property<string>("Longitud");

                    b.Property<int>("MaxDuracion");

                    b.Property<string>("Modalidad");

                    b.Property<bool>("PermiteAdult");

                    b.Property<bool>("PermiteInfante");

                    b.Property<bool>("PermiteNino");

                    b.Property<int?>("RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("Actividad");

                    b.HasDiscriminator().HasValue("Actividad");
                });

            modelBuilder.Entity("GoTravelTour.Models.Alojamiento", b =>
                {
                    b.HasBaseType("GoTravelTour.Models.Producto");

                    b.Property<int>("AlojamientoId");

                    b.Property<int?>("CategoriaHotelesId");

                    b.Property<string>("CheckIn");

                    b.Property<string>("CheckOut");

                    b.Property<string>("Direccion");

                    b.Property<int?>("EdadAdultoMax");

                    b.Property<int?>("EdadAdultoMin");

                    b.Property<int?>("EdadInfanteMax");

                    b.Property<int?>("EdadInfanteMin");

                    b.Property<int?>("EdadNinoMax");

                    b.Property<int?>("EdadNinoMin");

                    b.Property<string>("InfoLegal");

                    b.Property<string>("Latitud")
                        .HasColumnName("Alojamiento_Latitud");

                    b.Property<string>("Longitud")
                        .HasColumnName("Alojamiento_Longitud");

                    b.Property<int>("NumeroEstrellas");

                    b.Property<bool?>("PermiteAdult")
                        .HasColumnName("Alojamiento_PermiteAdult");

                    b.Property<bool?>("PermiteInfante")
                        .HasColumnName("Alojamiento_PermiteInfante");

                    b.Property<bool?>("PermiteMascota");

                    b.Property<bool?>("PermiteNino")
                        .HasColumnName("Alojamiento_PermiteNino");

                    b.Property<string>("PoliticaCancelacion");

                    b.Property<string>("PoliticaNino");

                    b.Property<int>("TipoAlojamientoId");

                    b.HasIndex("CategoriaHotelesId");

                    b.HasIndex("TipoAlojamientoId");

                    b.ToTable("Alojamiento");

                    b.HasDiscriminator().HasValue("Alojamiento");
                });

            modelBuilder.Entity("GoTravelTour.Models.Traslado", b =>
                {
                    b.HasBaseType("GoTravelTour.Models.Producto");

                    b.Property<int>("CantidadAdultTras");

                    b.Property<int>("CantidadInfantesTras");

                    b.Property<int>("CantidadNinoTras");

                    b.Property<int>("CapacidadTraslado");

                    b.Property<int>("TipoTransporteId");

                    b.Property<string>("TipoTraslado");

                    b.Property<int>("TrasladoId");

                    b.HasIndex("TipoTransporteId");

                    b.ToTable("Traslado");

                    b.HasDiscriminator().HasValue("Traslado");
                });

            modelBuilder.Entity("GoTravelTour.Models.Vehiculo", b =>
                {
                    b.HasBaseType("GoTravelTour.Models.Producto");

                    b.Property<int>("CantidadPlazas");

                    b.Property<int>("MarcaId");

                    b.Property<int>("ModeloId");

                    b.Property<string>("TipoTransmision");

                    b.Property<int>("VehiculoId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Vehiculo");

                    b.HasDiscriminator().HasValue("Vehiculo");
                });

            modelBuilder.Entity("GoTravelTour.Models.AlmacenImagenes", b =>
                {
                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.AlojamientosPlanesAlimenticios", b =>
                {
                    b.HasOne("GoTravelTour.Models.PlanesAlimenticios", "PlanesAlimenticios")
                        .WithMany("ListaAlojamientos")
                        .HasForeignKey("PlanesAlimenticiosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany("ListaPlanesAlimenticios")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.CombinacionHuespedes", b =>
                {
                    b.HasOne("GoTravelTour.Models.Habitacion", "Habitacion")
                        .WithMany("ListaCombinacionesDisponibles")
                        .HasForeignKey("HabitacionId");

                    b.HasOne("GoTravelTour.Models.Producto", "Hotel")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Comodidades", b =>
                {
                    b.HasOne("GoTravelTour.Models.CategoriaComodidad", "CategoriaComodidad")
                        .WithMany()
                        .HasForeignKey("CategoriaComodidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.ComodidadesProductos", b =>
                {
                    b.HasOne("GoTravelTour.Models.Comodidades", "Comodidades")
                        .WithMany("ListaProductos")
                        .HasForeignKey("ComodidadesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany("ListaComodidades")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.ConfiguracionVoucher", b =>
                {
                    b.HasOne("GoTravelTour.Models.TipoProducto", "TipoProducto")
                        .WithMany()
                        .HasForeignKey("TipoProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Contrato", b =>
                {
                    b.HasOne("GoTravelTour.Models.Distribuidor", "Distribuidor")
                        .WithMany()
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.TipoProducto", "TipoProducto")
                        .WithMany()
                        .HasForeignKey("TipoProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Habitacion", b =>
                {
                    b.HasOne("GoTravelTour.Models.CategoriaHabitacion", "CategoriaHabitacion")
                        .WithMany()
                        .HasForeignKey("CategoriaHabitacionId");

                    b.HasOne("GoTravelTour.Models.NombreHabitacion", "NombreHabitacion")
                        .WithMany()
                        .HasForeignKey("NombreHabitacionId");

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.HabitacionServiciosHabitacion", b =>
                {
                    b.HasOne("GoTravelTour.Models.Habitacion", "Habitacion")
                        .WithMany("ListaServiciosHabitacion")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.ServiciosHabitacion", "ServiciosHabitacion")
                        .WithMany("ListaServiciosHabitacion")
                        .HasForeignKey("ServiciosHabitacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.HabitacionTipoHabitacion", b =>
                {
                    b.HasOne("GoTravelTour.Models.Habitacion", "Habitacion")
                        .WithMany("ListaTiposHabitaciones")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany("ListaHabitaciones")
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Modificador", b =>
                {
                    b.HasOne("GoTravelTour.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("GoTravelTour.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId");
                });

            modelBuilder.Entity("GoTravelTour.Models.ModificadorProductos", b =>
                {
                    b.HasOne("GoTravelTour.Models.Modificador", "Modificador")
                        .WithMany("ListaHoteles")
                        .HasForeignKey("ModificadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany("ListaHoteles")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.ModificadorTemporada", b =>
                {
                    b.HasOne("GoTravelTour.Models.Modificador", "Modificador")
                        .WithMany("ListaTemporadasAfectadas")
                        .HasForeignKey("ModificadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany("ListaModificadoresActivos")
                        .HasForeignKey("TemporadaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Orden", b =>
                {
                    b.HasOne("GoTravelTour.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("CreadorUsuarioId");

                    b.HasOne("GoTravelTour.Models.Sobreprecio", "Sobreprecio")
                        .WithMany()
                        .HasForeignKey("SobreprecioId");
                });

            modelBuilder.Entity("GoTravelTour.Models.OrdenProducto", b =>
                {
                    b.HasOne("GoTravelTour.Models.Orden", "Orden")
                        .WithMany("ListaProductosEnOrden")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany("ListaOrdenesConEsteProducto")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.PosibleCombinacion", b =>
                {
                    b.HasOne("GoTravelTour.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany()
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioActividad", b =>
                {
                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaId");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioAlojamiento", b =>
                {
                    b.HasOne("GoTravelTour.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("GoTravelTour.Models.Habitacion", "Habitacion")
                        .WithMany()
                        .HasForeignKey("HabitacionId");

                    b.HasOne("GoTravelTour.Models.Producto", "Hotel")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaId");

                    b.HasOne("GoTravelTour.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany()
                        .HasForeignKey("TipoHabitacionId");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioComodidades", b =>
                {
                    b.HasOne("GoTravelTour.Models.Comodidades", "Comodidad")
                        .WithMany()
                        .HasForeignKey("ComodidadesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioPlanesAlimenticios", b =>
                {
                    b.HasOne("GoTravelTour.Models.Contrato", "ContratoDelPrecio")
                        .WithMany()
                        .HasForeignKey("ContratoDelPrecioContratoId");

                    b.HasOne("GoTravelTour.Models.PlanesAlimenticios", "PlanesAlimenticios")
                        .WithMany()
                        .HasForeignKey("PlanesAlimenticiosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Hotel")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioRentaAutos", b =>
                {
                    b.HasOne("GoTravelTour.Models.Producto", "Auto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaId");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioServicio", b =>
                {
                    b.HasOne("GoTravelTour.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaId");
                });

            modelBuilder.Entity("GoTravelTour.Models.PrecioTraslado", b =>
                {
                    b.HasOne("GoTravelTour.Models.Producto", "Traslado")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Rutas", "Rutas")
                        .WithMany()
                        .HasForeignKey("RutasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaId");
                });

            modelBuilder.Entity("GoTravelTour.Models.Producto", b =>
                {
                    b.HasOne("GoTravelTour.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.PuntoInteres", "PuntoInteres")
                        .WithMany()
                        .HasForeignKey("PuntoInteresId");

                    b.HasOne("GoTravelTour.Models.TipoProducto", "TipoProducto")
                        .WithMany()
                        .HasForeignKey("TipoProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.ProductoDistribuidor", b =>
                {
                    b.HasOne("GoTravelTour.Models.Distribuidor", "Distribuidor")
                        .WithMany("ListaProductosDistribuidos")
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany("ListaDistribuidoresProducto")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.PuntoInteres", b =>
                {
                    b.HasOne("GoTravelTour.Models.Region", "Region")
                        .WithMany("PuntosDeInteres")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.RangoFechas", b =>
                {
                    b.HasOne("GoTravelTour.Models.Alojamiento", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany("ListaFechasTemporada")
                        .HasForeignKey("TemporadaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Reglas", b =>
                {
                    b.HasOne("GoTravelTour.Models.Modificador", "Modificador")
                        .WithMany("ListaReglas")
                        .HasForeignKey("ModificadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany()
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Restricciones", b =>
                {
                    b.HasOne("GoTravelTour.Models.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaId");
                });

            modelBuilder.Entity("GoTravelTour.Models.RestriccionesPrecio", b =>
                {
                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Restricciones", "Restricciones")
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Rutas", b =>
                {
                    b.HasOne("GoTravelTour.Models.PuntoInteres", "PuntoInteresDestino")
                        .WithMany()
                        .HasForeignKey("PuntoInteresDestinoPuntoInteresId");

                    b.HasOne("GoTravelTour.Models.PuntoInteres", "PuntoInteresOrigen")
                        .WithMany()
                        .HasForeignKey("PuntoInteresOrigenPuntoInteresId");
                });

            modelBuilder.Entity("GoTravelTour.Models.Servicio", b =>
                {
                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Sobreprecio", b =>
                {
                    b.HasOne("GoTravelTour.Models.TipoProducto", "TipoProducto")
                        .WithMany()
                        .HasForeignKey("TipoProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Temporada", b =>
                {
                    b.HasOne("GoTravelTour.Models.Contrato", "Contrato")
                        .WithMany("Temporadas")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Usuario", b =>
                {
                    b.HasOne("GoTravelTour.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.VehiculoCategoriaAuto", b =>
                {
                    b.HasOne("GoTravelTour.Models.CategoriaAuto", "CategoriaAuto")
                        .WithMany("ListaVehiculos")
                        .HasForeignKey("CategoriaAutoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Actividad", b =>
                {
                    b.HasOne("GoTravelTour.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("GoTravelTour.Models.Alojamiento", b =>
                {
                    b.HasOne("GoTravelTour.Models.CategoriaHoteles", "CategoriaHoteles")
                        .WithMany()
                        .HasForeignKey("CategoriaHotelesId");

                    b.HasOne("GoTravelTour.Models.TipoAlojamiento", "TipoAlojamiento")
                        .WithMany()
                        .HasForeignKey("TipoAlojamientoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Traslado", b =>
                {
                    b.HasOne("GoTravelTour.Models.TipoTransporte", "TipoTransporte")
                        .WithMany()
                        .HasForeignKey("TipoTransporteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoTravelTour.Models.Vehiculo", b =>
                {
                    b.HasOne("GoTravelTour.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoTravelTour.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
