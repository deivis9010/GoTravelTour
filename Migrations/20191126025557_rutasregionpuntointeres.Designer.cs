// <auto-generated />
using System;
using GoTravelTour.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoTravelTour.Migrations
{
    [DbContext(typeof(GoTravelDBContext))]
    [Migration("20191126025557_rutasregionpuntointeres")]
    partial class rutasregionpuntointeres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoTravelTour.Models.AlmacenImagenes", b =>
                {
                    b.Property<int>("AlmacenImagenesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageContent");

                    b.Property<string>("Localizacion");

                    b.Property<string>("NombreImagen");

                    b.Property<string>("TipoImagen");

                    b.HasKey("AlmacenImagenesId");

                    b.ToTable("AlmacenImagenes");
                });

            modelBuilder.Entity("GoTravelTour.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle");

                    b.Property<string>("Ciudad");

                    b.Property<string>("Correo");

                    b.Property<double?>("Descuento");

                    b.Property<string>("Direccion");

                    b.Property<string>("Estado");

                    b.Property<string>("ImageContent");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<bool>("IsActivo");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Localizador");

                    b.Property<string>("Nombre");

                    b.Property<string>("Pais");

                    b.Property<string>("Telefono");

                    b.Property<string>("TipoTrasaccion");

                    b.Property<string>("ZipCode");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GoTravelTour.Models.PlanesAlimenticios", b =>
                {
                    b.Property<int>("PlanesAlimenticiosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Nombre");

                    b.HasKey("PlanesAlimenticiosId");

                    b.ToTable("PlanesAlimenticios");
                });

            modelBuilder.Entity("GoTravelTour.Models.PuntoInteres", b =>
                {
                    b.Property<int>("PuntoInteresId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int?>("RegionId");

                    b.HasKey("PuntoInteresId");

                    b.HasIndex("RegionId");

                    b.ToTable("PuntosInteres");
                });

            modelBuilder.Entity("GoTravelTour.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("RegionId");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("GoTravelTour.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreRol");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GoTravelTour.Models.Rutas", b =>
                {
                    b.Property<int>("RutasId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("puntoDestinoPuntoInteresId");

                    b.Property<int?>("puntoOrigenPuntoInteresId");

                    b.Property<int?>("regionDestinoRegionId");

                    b.Property<int?>("regionOrigenRegionId");

                    b.HasKey("RutasId");

                    b.HasIndex("puntoDestinoPuntoInteresId");

                    b.HasIndex("puntoOrigenPuntoInteresId");

                    b.HasIndex("regionDestinoRegionId");

                    b.HasIndex("regionOrigenRegionId");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("GoTravelTour.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId");

                    b.Property<string>("Correo");

                    b.Property<bool>("IsActivo");

                    b.Property<string>("Password");

                    b.Property<int?>("RolId");

                    b.Property<string>("Username");

                    b.HasKey("UsuarioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GoTravelTour.Models.PuntoInteres", b =>
                {
                    b.HasOne("GoTravelTour.Models.Region", "region")
                        .WithMany("PuntosDeInteres")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("GoTravelTour.Models.Rutas", b =>
                {
                    b.HasOne("GoTravelTour.Models.PuntoInteres", "puntoDestino")
                        .WithMany()
                        .HasForeignKey("puntoDestinoPuntoInteresId");

                    b.HasOne("GoTravelTour.Models.PuntoInteres", "puntoOrigen")
                        .WithMany()
                        .HasForeignKey("puntoOrigenPuntoInteresId");

                    b.HasOne("GoTravelTour.Models.Region", "regionDestino")
                        .WithMany()
                        .HasForeignKey("regionDestinoRegionId");

                    b.HasOne("GoTravelTour.Models.Region", "regionOrigen")
                        .WithMany()
                        .HasForeignKey("regionOrigenRegionId");
                });

            modelBuilder.Entity("GoTravelTour.Models.Usuario", b =>
                {
                    b.HasOne("GoTravelTour.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GoTravelTour.Models.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("RolId");
                });
#pragma warning restore 612, 618
        }
    }
}
